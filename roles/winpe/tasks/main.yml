---

- name: run pre-flight tasks
  ansible.builtin.include_tasks: pre_flight.yml

- name: show os level
  ansible.builtin.debug:
    msg: "{{ winpe_os_level }}"

- name: set winpe_name
  ansible.builtin.set_fact:
    winpe_name: '{{ winpe_name }}_ps'
  when: winpe_enable_powershell_modules | bool

- name: set winpe_name with debug
  ansible.builtin.set_fact:
    winpe_name: '{{ winpe_name }}_debug'
  when: winpe_enable_script_debug | bool

- name: install adk and winpe addon
  ansible.builtin.include_tasks: install.yml

- name: copy winpeshl.ini file
  ansible.windows.win_copy:
    src: winpeshl.ini
    dest: '{{ winpe_temp_directory }}\winpeshl.ini'
  when: winpe_enable_autostart | bool

- name: create files
  ansible.windows.win_template:
    src: '{{ item }}'
    dest: '{{ winpe_temp_directory }}\{{ item }}'
  loop:
    - init.cmd
    - setsysname.cmd

- name: download curl
  ansible.windows.win_get_url:
    url: '{{ winpe_curl_download_url }}'
    dest: '{{ winpe_temp_directory }}\curl.zip'

- name: unzip curl
  community.windows.win_unzip:
    src: '{{ winpe_temp_directory }}\curl.zip'
    dest: '{{ winpe_temp_directory }}'
    creates: '{{ winpe_temp_directory }}\{{ winpe_curl_directory }}'

- name: load drivers
  ansible.builtin.include_tasks: drivers.yml
  when: winpe_load_drivers | bool

- name: change wallpaper
  ansible.builtin.include_tasks: wallpaper.yml
  when: winpe_replace_wallpaper | bool

- name: create a working copy of the windows pe files
  ansible.windows.win_shell: >
    "..\Deployment Tools\DandISetEnv.bat"
    & copype {{ winpe_arch }} C:\{{ winpe_name }}
  args:
    executable: cmd
    chdir: C:\ADK\Assessment and Deployment Kit\Windows Preinstallation Environment
    creates: C:\{{ winpe_name }}

- name: copy script file
  ansible.windows.win_template:
    src: create_winpe.ps1
    dest: '{{ winpe_temp_directory }}\create_winpe.ps1'

- name: copy files and modules into winpe
  ansible.windows.win_shell: '{{ winpe_temp_directory }}\create_winpe.ps1'
  register: copy_files_and_modules

- name: create winpe iso file
  ansible.windows.win_shell: >
    "..\Deployment Tools\DandISetEnv.bat" &
    MakeWinPEMedia /ISO C:\{{ winpe_name }} {{ winpe_temp_directory }}\{{ winpe_name }}.iso
  args:
    executable: cmd
    chdir: C:\ADK\Assessment and Deployment Kit\Windows Preinstallation Environment

- name: copy winpe iso file
  ansible.windows.win_copy:
    src: '{{ winpe_temp_directory }}\{{ winpe_name }}.iso'
    dest: '{{ winpe_smb_share }}\{{ winpe_destination_file_location }}\'
    remote_src: true
  become: true
  become_method: ansible.builtin.runas
  become_flags: logon_type=new_credentials logon_flags=netcredentials_only
  vars:
    ansible_become_user: '{{ winpe_smb_share_username }}'
    ansible_become_pass: '{{ winpe_smb_share_password }}'

- name: remove boot prompt
  ansible.windows.win_file:
    path: C:\{{ winpe_name }}\media\Boot\Bootfix.bin
    state: absent

- name: create winpe no prompt iso file
  ansible.windows.win_shell: >
    "..\Deployment Tools\DandISetEnv.bat" &
    MakeWinPEMedia /ISO C:\{{ winpe_name }} {{ winpe_temp_directory }}\{{ winpe_name }}_no_prompt.iso
  args:
    executable: cmd
    chdir: C:\ADK\Assessment and Deployment Kit\Windows Preinstallation Environment

- name: copy winpe no prompt iso file
  ansible.windows.win_copy:
    src: '{{ winpe_temp_directory }}\{{ winpe_name }}_no_prompt.iso'
    dest: '{{ winpe_smb_share }}\{{ winpe_destination_file_location }}\'
    remote_src: true
  become: true
  become_method: ansible.builtin.runas
  become_flags: logon_type=new_credentials logon_flags=netcredentials_only
  vars:
    ansible_become_user: '{{ winpe_smb_share_username }}'
    ansible_become_pass: '{{ winpe_smb_share_password }}'

- name: clean up temp files
  ansible.windows.win_file:
    path: '{{ winpe_temp_directory }}\{{ item }}'
    state: absent
  loop:
    - winpeshl.ini
    - init.cmd
    - setsysname.cmd
    - create_winpe.ps1
    - curl.zip
    - '{{ winpe_curl_directory }}'
    - '{{ winpe_name }}.iso'
    - '{{ winpe_name }}_no_prompt.iso'

- name: clean winpe files
  ansible.windows.win_file:
    path: C:\{{ winpe_name }}
    state: absent
